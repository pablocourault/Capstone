COSAS QUE TUVE QUE INSTALAR Y HAY QUE AVISAR EN EL README O REQUEST

/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

gettext
apt install gettext
parado en "/capstone/hotel" hay que correr el comando
django-admin makemessages -l es
y crea un archivo para cada idioma

después ejecutar

django-admin compilemessages


/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/


Booking lo hace todo en una sola página con "anclas" a lo largo, puede ser útil para hacerlo más "responsivo"

Aclarar que no se implementan medios de pago (pero se podrían poner logos para que quede lindo)

Servicios (para poner en Modelo SERVICIOS)
Habitación
Solarium
Gimnasio
Sauna
Lavandería
Servicio de Planchado / Ironing facilities
Heladera (consumos en habitación)
Restaurante


/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

CONSIDERACIONES   *** REVEER TODO EL TIEMPO Y MANTENERLO LO MÁS SENCILLO POSIBLE ***
                  *** LO QUE ESTÁ AQUÍ VA A SERVIR PARA EXPLICAR EL PROYECTO EN LA ENTREGA ***

* Debería tener al menos dos idiomas

* Opción "My Bookings" (Mis reservas) -el usuario debe estar logueado-
  - Debe mostrar todas las reservas del usuario y darle la posibilidad de darlas de baja
  - Si no tiene reservas, sólo informar que no hay reservas a su nombre.
  - No se debe confundir con "Bookings" que lo lleva a poder hacer una reserva
    o consultar disponibilidad.
  - OJO el delete de la reserva solo lo puede hacer si no hizo el checkin.
    Si el checkin es False aparecen las opciones Delete y Check In.
    Si el checkin es True aparece sólo la opción Check Out.


* Opción "Orders" (revisar traducción)
  - Le muestra al usuario en una parte de la pantalla las cosas que puede pedir y el precio,
    y en otra parte le da la posibilidad de hacer pedidos (órdenes).


* Opción "Invoice" (revisar traducción, se podría buscar como deuda o débitos, lo que sea más usual)
  - Le muestra al usuario una lista de sus consumos, con fecha, concepto, importe individual
    y el total acumulado. Estará vacío si no hizo el Check In.
  - Si no tiene consumos, solo le informa eso (similar a cuando no tiene reservas).
  - Le muestra un botón visualizar todos los consumos de una booking y marcar que los pagó con el código de pago, como condición para hacer el Check Out,
    (si no es difícil de implementar).


* Opción "Messages"
  - Si tiene mensajes sin leer le debe aparecer una notificación al lado, por ej el n° sin leer
  - Debe poder verlos, responder y borrar cada uno de ellos.


* Opción "Check In / Check Out"
  - Si el usuario está logueado y tiene una reserva en fecha debe aparecer el botón "Check In".
  - Al hacer el auto Check In se le genera el primer cargo o consumo que es el de la(s) habitación(es).
  - Si el usuario está logueado, hizo el Check In y está en fecha de salir, debe mostrarse la opción de Check Out.
  - Al hacer el Check Out se cierren los consumos.
  - Es al momento de hacer el Check Out le avisa que tiene la posibilidad de dejar un comentario o review (estado "out").


* Opción "Booking"
  - Para hacer una consulta de disponibilidad para reserva debería indicar:
	Fecha de entrada
	Fecha de salida
	Se indica en cada tipo de habitación que se admite un niño gratis.
  Niños menores a seis años, no se les cobra pero se calcula como ocupación, para la reserva.

   - La consulta de reserva devuelve la cantidad disponible de habitaciones por cada tipo.
      Los tipos de habitaciones son Single, Double, Triple y Quadruple.

   - Si el usuario está logueado le da la posibilidad de hacer la reserva, sino solo le informa
     de la disponibilidad (un botón que aparezca o desaparezca).

* Opción "Guest Reviews"
   - Cuando un usuario en la lista GUESTS, logueado hace el check-out, se le brinda la posibilidad de dejar un comentario.
     Si hizo el chek-out, sin dejar un comentario, ya no podrá hacerlo.
   - Muestra los comentarios de los huéspedes, ordenados por más recientes, con un paginador.
   - Los comentarios tendrán un puntaje y un texto.
   - Debería mostrar en un campo al principio el promedio de puntajes otorgados.
   - Se podría poner la opción de ordenar por mejores o peores comentarios primero.

/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

PROCESOS

- Navegar el sitio, ver el hotel (no requiere nada)
- Registrarse
- Login / Logout
- Consultar habitaciones disponibles por rango de fechas (modelos: ROOM, BOOKINGS)
- Consultar habitaciones disponibles y hacer reserva (modelos: ROOM, BOOKINGS)
* Enviar y recibir mensajes de la recepción tipo DM (hacerlo si no se complica, modelo: MENSAJES)
* Dejar comentarios sobre el servicio del hotel (modelo: COMENTARIOS)
* Pedir servicios para una habitación (modelo: SERVICIOS, CONSUMOS)
* Obtener gastos a pagar, marcar como pagados con el código de pago suministrado (modelo: CONSUMOS)
* Check In: agregar usuario a GUESTS, agregar amount de BOOKINGS en consumos.
* Check Out: habilitado con código de reserva, eliminar usuario de GUESTS, guardar comentario (si lo deja)
             borra la reserva correspondiente.

/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

MODELOS

* USERS

* GUESTS
  - guest (usuario, si está en este modelo, 
           es porque hizo el check-in -se lo agrega en ese momento-, lo habilita a hacer consumos,
           se borra al hacer el check-out)
  - booking (tiene una instancia por cada reserva, se borra una instancia por cada check-out)


* ROOM
 - description
 - room-type
 - quantity
 - rate


* BOOKINGS (es la reseva, no importa las habitaciones, está bien pensado asi)
 - user
 - singles
 - doubles
 - triples
 - quadruples
 - checkin_date
 - checkout_date
 - checkout_code (código necesario para hacer el ckeck-out y que cancela los consumos
                  hipotéticamente se lo entregarían al huésped al momento de hacer el pago)
                  (la disponibilidad de reserva se hace contando la cantidad reservadas
                   para esa fecha por room-type, menos la quantity que hay en ROOM
                   por room-type.)
 - amount       (al hacer la reserva, se le guarda el monto total por las habitaciones, es decir:
                 se le "congela" la tarifa porque después puede cambiar,
                 OJO, cuando hace el check-in se le inicializan los consumos con este monto.
                 Este campo se utiliza solo para eso.)
 - checkin       Boolean, True when Guest make checkin.


* CONSUMOS
 - guest
 - booking
 - Servicio
 - date
 - amount
 - (El usuario cancelaría todos los consumos correspondientes a un booking.
    al momento de hacer el check-out, con el código de pago que le suministraría
    el administrador o Front End; el cual es el campo checkout_code.
    El monto se va sumando al amount del booking para que aparezca el total completo,
    en la página mybookings.html y se pueda ver al momento de hacer el check-out.)


* SERVICIOS
 - Descripción
 - Tarifa

* MENSAJES (HACER LO DE MENSAJES SI NO SE COMPLICA)
 - Fecha
 - Remitente
 - Destinatario
 - Texto
 - Estado (leído / no leído)

* COMENTARIOS
 - texto
 - calificación
 - usuario
 - bandera del país de orígen


/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

IDEAS DE ESTILOS

Cuando selecciona un header-label que cambien a color lila el header-label y el header-icon"
o sea quedan marcados como seleccionados" ¿sería tipo clase "active" de faqs?

¿ Poner un "Dark Theme" con una medialuna que se corra ?

OJO: mirar y prestarle mucha atención a esto: https://www.w3schools.com/bootstrap/default.asp
OJO: Bootstrap también tiene un conjunto de íconos.

/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

PARA EL FINAL

- Ver de factorizar el css con SCSS.
- Aclarar en el README de la entrega que los logos de las redes sociales son simbólicos,
  o ponerlo como un mensaje en el código, no es que falta hacer.
- Revisar todos los mensajes en inglés porque es lo primero que van a ver.
- PROBAR CON DISTINTOS NAVEGADORES
- Controlar que el diseño responsivo funcione para las páginas en TODO el sitio.
- Revisar todo el enunciado del trabajo final que no me falte nada.
- Ver que no arroje errores de javascript.
- Aclarar en el README todo lo que se puede hacer en la parte de Django Admin.

/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/

PENDIENTES
- Ponerle un poquito de animación al desplegable de FAQs 
  También se puede reveer porque hay un bootstrap collapsable:
  https://www.w3schools.com/bootstrap/bootstrap_collapse.asp
- La galería de fotos modal se podría reemplazar por la estándar de bootstrap: 
  https://www.w3schools.com/bootstrap/bootstrap_ref_js_carousel.asp
- Buscar un conjunto de fotos alternativas de derechos libres



/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/


Algoritmo Reservas: 

OJO EL SISTEMA NO DECIDE NADA, SOLO MUESTRA DISPONIBILIDADES
SEGÚN LAS FECHAS QUE EL USUARIO INDICA,Y ES ÉL QUIEN ELIJE


1) Elige las fechas
2) Se buscan las habitaciones disponibles (ver explicación de cómo en modelo BOOKINGS)
3) Se muestran las habitaciones disponibles (cantidad por cada tipo)
4) El usuario indica la cantidad de habitaciones que necesita por cada tipo (en base a la disponibilidad del punto anterior)
5) Se le muestra antes de confirmar: el total de habitaciones por tipo, cuántas personas puede alojar y el monto total.
5b) Indicar en el punto anterior la cantidad de niños que puede alojar.
5c) El punto 5 debería ir a otra página, pero con la posibilidad de volver atrás y modificar.